
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA EQUAL ID LOCAL NUMBERstatement : local_declaration\n                 | assignmentlocal_declaration : LOCAL var_list\n                         | LOCAL var_list EQUAL exp_listassignment : var_list EQUAL exp_listvar_list : ID \n                | ID COMMA var_listexp_list : expression\n                | expression COMMA exp_listexpression : ID\n                  | NUMBER'
    
_lr_action_items = {'LOCAL':([0,],[4,]),'ID':([0,4,8,9,10,17,],[6,6,13,6,13,13,]),'$end':([1,2,3,6,7,11,12,13,14,15,16,18,],[0,-1,-2,-6,-3,-5,-8,-10,-11,-7,-4,-9,]),'EQUAL':([5,6,7,15,],[8,-6,10,-7,]),'COMMA':([6,12,13,14,],[9,17,-10,-11,]),'NUMBER':([8,10,17,],[14,14,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'local_declaration':([0,],[2,]),'assignment':([0,],[3,]),'var_list':([0,4,9,],[5,7,15,]),'exp_list':([8,10,17,],[11,16,18,]),'expression':([8,10,17,],[12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> local_declaration','statement',1,'p_statement','VariableDeclaration.py',34),
  ('statement -> assignment','statement',1,'p_statement','VariableDeclaration.py',35),
  ('local_declaration -> LOCAL var_list','local_declaration',2,'p_local_declaration','VariableDeclaration.py',40),
  ('local_declaration -> LOCAL var_list EQUAL exp_list','local_declaration',4,'p_local_declaration','VariableDeclaration.py',41),
  ('assignment -> var_list EQUAL exp_list','assignment',3,'p_assignment','VariableDeclaration.py',51),
  ('var_list -> ID','var_list',1,'p_var_list','VariableDeclaration.py',55),
  ('var_list -> ID COMMA var_list','var_list',3,'p_var_list','VariableDeclaration.py',56),
  ('exp_list -> expression','exp_list',1,'p_exp_list','VariableDeclaration.py',63),
  ('exp_list -> expression COMMA exp_list','exp_list',3,'p_exp_list','VariableDeclaration.py',64),
  ('expression -> ID','expression',1,'p_expression','VariableDeclaration.py',71),
  ('expression -> NUMBER','expression',1,'p_expression','VariableDeclaration.py',72),
]
